step "create-deployment" {
    name = "Create deployment"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action {
        action_type = "Octopus.KubernetesDeployRawYaml"
        properties = {
            Octopus.Action.Kubernetes.DeploymentTimeout = "600"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.KubernetesContainers.CustomResourceYamlFileName = "deployment.yml"
            Octopus.Action.Package.JsonConfigurationVariablesTargets = "**/*.{yml,yaml}"
            Octopus.Action.Script.ScriptSource = "GitRepository"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "hosted-ubuntu"

        container {
            feed = "docker-hub"
            image = "#{Platform.WorkerImage.K8s}"
        }

        git_dependencies {
            default_branch = "main"
            file_path_filters = ["deployment.yml"]
            git_credential_id = "GitCredentials-1301"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/octopub-products.git"
        }
    }
}

step "create-service" {
    name = "Create service"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action {
        action_type = "Octopus.KubernetesDeployRawYaml"
        properties = {
            Octopus.Action.Kubernetes.DeploymentTimeout = "600"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.KubernetesContainers.CustomResourceYamlFileName = "service.yml"
            Octopus.Action.Script.ScriptSource = "GitRepository"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "hosted-ubuntu"

        container {
            feed = "docker-hub"
            image = "octopuslabs/k8s-workertools:latest"
        }

        git_dependencies {
            default_branch = "main"
            file_path_filters = ["service.yml"]
            git_credential_id = "GitCredentials-1301"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/octopub-products.git"
        }
    }
}

step "deploy-ingress" {
    name = "Create ingress"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action "create-ingress" {
        action_type = "Octopus.KubernetesDeployRawYaml"
        properties = {
            Octopus.Action.Kubernetes.DeploymentTimeout = "600"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.KubernetesContainers.CustomResourceYamlFileName = "ingress.yml"
            Octopus.Action.Package.JsonConfigurationVariablesTargets = "**/*.{yml,yaml}"
            Octopus.Action.Script.ScriptSource = "GitRepository"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "hosted-ubuntu"

        container {
            feed = "docker-hub"
            image = "octopuslabs/k8s-workertools:latest"
        }

        git_dependencies {
            default_branch = "main"
            file_path_filters = ["ingress.yml"]
            git_credential_id = "GitCredentials-1301"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/octopub-products.git"
        }
    }
}